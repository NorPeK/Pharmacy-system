/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_gui_remake;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;

/**
 *
 * @author basil
 */
public class Order_page extends javax.swing.JFrame {

    Date today_date=new Date();
    SimpleDateFormat simple_date = new SimpleDateFormat("yyyy/MM/dd HH:mm");
    
    public Order_page() {
        initComponents();
        get_UserId();
    }
    
    //Methods for getting id and name for who has logged in
    public void get_UserId(){
        try{
        File myfile = new File("UserId.txt");
        Scanner scan = new Scanner(myfile);
        //Scsnnig the file which has record the id for who has logged in
        String user_id=scan.nextLine();
        user_id_textfield.setText(user_id);
        Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/milestone2_ver5?zeroDateTimeBehavior=convertToNull","root","pass123");
        Statement stm = connect.createStatement();
        //Converting the user_id from String to int
        int convert_id=Integer.parseInt(user_id);
        //String for selectnig the name who has this id
        String sql_query="SELECT CUSTOMER_NAME FROM CUSTOMER WHERE CUSTOMER_ID="+convert_id;
        ResultSet myresult = stm.executeQuery(sql_query);
        while(myresult.next()){
            user_name_textfield.setText(myresult.getString(1));
        }
        stm.close();
        connect.close();
        }
        catch(Exception er){
            System.out.println(er.getMessage());
        }
    }
    public void refresh_table(){
       
       try{
       Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/milestone2_ver5?zeroDateTimeBehavior=convertToNull","root","pass123");
       Statement stm = connect.createStatement();
       String sql_query="SELECT * FROM PRODUCTS";
       ResultSet myresult = stm.executeQuery(sql_query);
       ResultSetMetaData mymetadata=myresult.getMetaData();
       DefaultTableModel mymodel=(DefaultTableModel) products_table.getModel();
       mymodel.setRowCount(0);
       
            Products myproducts=new Products();
            
            while(myresult.next()){
                myproducts.name=myresult.getString(1);
                myproducts.type=myresult.getString(2);
                myproducts.barcode=myresult.getString(3);
                myproducts.dose=myresult.getString(4);
                String id_string=myresult.getString(5);
                String price_string=myresult.getString(6);
                myproducts.production_data=myresult.getString(7);
                myproducts.expiration_date=myresult.getString(8);
                String quantity_string=myresult.getString(9);
                
                String []row={myproducts.name,myproducts.type,myproducts.barcode,
                              myproducts.dose,id_string,price_string,
                              myproducts.production_data,myproducts.expiration_date,quantity_string};
                mymodel.addRow(row);
            }
            stm.close();
            connect.close();
       
       }
       catch(Exception er){
           System.out.println(er.getMessage());
       }
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        products_table = new javax.swing.JTable();
        show_button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Back_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        user_id_textfield = new javax.swing.JTextField();
        productsid_textfield = new javax.swing.JTextField();
        product_name_textfield = new javax.swing.JTextField();
        order_button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        quantity_spinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        total_price_textfield = new javax.swing.JTextField();
        empty_error_message = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        user_name_textfield = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order Page");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(235, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Order Page");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 110, -1));

        products_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                products_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(products_table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 640, 120));

        show_button.setText("Show Data");
        show_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(show_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 410, -1, -1));

        jLabel2.setText("User ID :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, -1));

        Back_button.setText("Back");
        Back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(Back_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, -1, -1));

        jLabel3.setText("Product ID :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        jLabel4.setText("Product name :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        user_id_textfield.setEditable(false);
        user_id_textfield.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(user_id_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 90, 20));

        productsid_textfield.setEditable(false);
        productsid_textfield.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(productsid_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 90, 20));

        product_name_textfield.setEditable(false);
        product_name_textfield.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(product_name_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 90, 20));

        order_button.setText("Order");
        order_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(order_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 240, 90, -1));

        jLabel5.setText("Quantity :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, -1));

        quantity_spinner.setModel(new javax.swing.SpinnerNumberModel(1, 0, null, 1));
        quantity_spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantity_spinnerStateChanged(evt);
            }
        });
        jPanel1.add(quantity_spinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 114, 40, 30));

        jLabel6.setText("Total price :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, -1, -1));

        total_price_textfield.setEditable(false);
        total_price_textfield.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(total_price_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, 90, 20));
        jPanel1.add(empty_error_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 210, -1, -1));

        jLabel7.setText("Name :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, -1, -1));

        user_name_textfield.setEditable(false);
        user_name_textfield.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.add(user_name_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 90, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void show_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_buttonActionPerformed
        // TODO add your handling code here:
        try{
            Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/milestone2_ver5?zeroDateTimeBehavior=convertToNull","root","pass123");
            Statement stm = connect.createStatement();
            String sql_query="SELECT * FROM PRODUCTS";
            ResultSet myresult=stm.executeQuery(sql_query);
            ResultSetMetaData mymetadata=myresult.getMetaData();
            DefaultTableModel mymodel=(DefaultTableModel) products_table.getModel();
            //getting the number of columns
            int columns_num=mymetadata.getColumnCount();
            //creating an array with the size of columns numbers
            String[] columns_name = new String[columns_num];
            
            //loop for getting column names
            for(int i=0;i<columns_num;i++){
                columns_name[i]=mymetadata.getColumnName(i+1);
            }
            mymodel.setColumnIdentifiers(columns_name);
            
            Products myproducts=new Products();
            
            //taking all information from products table
            while(myresult.next()){
                myproducts.name=myresult.getString(1);
                myproducts.type=myresult.getString(2);
                myproducts.barcode=myresult.getString(3);
                myproducts.dose=myresult.getString(4);
                String id_string=myresult.getString(5);
                String price_string=myresult.getString(6);
                myproducts.production_data=myresult.getString(7);
                myproducts.expiration_date=myresult.getString(8);
                String quantity_string=myresult.getString(9);
                
                //putting the information in array...
                String []row={myproducts.name,myproducts.type,myproducts.barcode,
                              myproducts.dose,id_string,price_string,
                              myproducts.production_data,myproducts.expiration_date,quantity_string};
                //then add it into the JTable
                mymodel.addRow(row);
            }
            stm.close();
            connect.close();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_show_buttonActionPerformed

    private void Back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_buttonActionPerformed
        // TODO add your handling code here:
        dispose();
        Customer_Page_Remake custpage = new Customer_Page_Remake();
        custpage.setLocationRelativeTo(this);
        custpage.show();
    }//GEN-LAST:event_Back_buttonActionPerformed

    private void products_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_products_tableMouseClicked
        
        DefaultTableModel mytabelmodel = (DefaultTableModel)products_table.getModel();
        //getting the information from mouse clicked
        String product_id= mytabelmodel.getValueAt(products_table.getSelectedRow(),4).toString();
        String product_name=mytabelmodel.getValueAt(products_table.getSelectedRow(),0).toString();
        String total_price=mytabelmodel.getValueAt(products_table.getSelectedRow(),5).toString();
        
        //checking the value on the spinner
        int spinner_value=(int) quantity_spinner.getValue();
        double convert_price=Double.valueOf(total_price);
        //getting the total
        double new_total=(convert_price*spinner_value);
        String convert_newprice=Double.toString(new_total);
        
        productsid_textfield.setText(product_id);
        product_name_textfield.setText(product_name);
        total_price_textfield.setText(convert_newprice);
    }//GEN-LAST:event_products_tableMouseClicked

    private void quantity_spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantity_spinnerStateChanged
        //changing the price every time the value of the spinner changes
        int spinner_value=(int) quantity_spinner.getValue();
        DefaultTableModel mytabelmodel = (DefaultTableModel)products_table.getModel();
        //taking the price of the product
        String current_price=mytabelmodel.getValueAt(products_table.getSelectedRow(),5).toString();
        double convert_current=Double.valueOf(current_price);
        double total=(convert_current*spinner_value);
        //getting the total
        String convert_total =Double.toString(total);
        total_price_textfield.setText(convert_total);
    }//GEN-LAST:event_quantity_spinnerStateChanged

    private void order_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_buttonActionPerformed
      
        Order myorder = new Order();
        
        //Taking information from textfields
        myorder.cust_id=user_id_textfield.getText();
        myorder.cust_name=user_name_textfield.getText();
        myorder.product_id=productsid_textfield.getText();
        myorder.product_name=product_name_textfield.getText();
        myorder.quantity=quantity_spinner.getValue().toString();
        myorder.price=total_price_textfield.getText();
        myorder.order_date=simple_date.format(today_date);
        //checking if users choose a product or not
        if(productsid_textfield.getText().isEmpty()){
            empty_error_message.setText("You Should Choose");
        }
        //if user chose a product then...
        else{ 
            //just converting the information from string to int
            int convert_custID = Integer.parseInt(myorder.cust_id);
            int convert_productID = Integer.parseInt(myorder.product_id);
            int convert_quantity = Integer.parseInt(myorder.quantity);
            double convert_price = Double.valueOf(myorder.price);
            
            try{
        //starting connection with database
        Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/milestone2_ver5?zeroDateTimeBehavior=convertToNull","root","pass123");
        Statement stm = connect.createStatement();
        
        //String for selectnig product quantitiy 
        String sql_query="SELECT QUANTITY FROM PRODUCTS WHERE PRODUCT_ID="+convert_productID;
        //String for Inserting into orders table
        String sql_query2="INSERT INTO ORDERS (Cust_id,Cust_name,Product__id,Product_name,Quantity,price,order_date) VALUES ("+convert_custID+",'"+myorder.cust_name+"',"
                +convert_productID+",'"+myorder.product_name+"',"+convert_quantity+","+convert_price+",'"+myorder.order_date+"')";
        //String for minus the quantity after buying
        String sql_query3="UPDATE PRODUCTS set quantity=(quantity-"+convert_quantity+")"+" WHERE PRODUCT_ID ="+convert_productID;
        //String for selecting everything from orders table
        String sql_query4="SELECT * FROM ORDERS";
        
        //starting with selectnig product quantitiy
        ResultSet myresult=stm.executeQuery(sql_query);
        while(myresult.next()){
            //checking if product has enough quantity
            if(myresult.getInt(1)!=0 && myresult.getInt(1)>=convert_quantity){
            //INSERTING...
            stm.executeUpdate(sql_query2);
            //MINUS THE QUANTITY    
            stm.executeUpdate(sql_query3);
        refresh_table();
        JOptionPane.showMessageDialog(this,"Order Has Placed Successfully !");
        
        //Starting selectnig everything in orders table
        ResultSet myresult2 = stm.executeQuery(sql_query4);
          //writing on file for invoices
        File myfile = new File("all_orders.txt");
        FileWriter filewriter = new FileWriter(myfile);
        PrintWriter printwriter = new PrintWriter(filewriter);
        
        while(myresult2.next()){
        printwriter.println("order id : "+myresult2.getInt(1));
        printwriter.println("Customer id : "+myresult2.getInt(2));
        printwriter.println("Customer Name : "+myresult2.getString(3));
        printwriter.println("Product Id : "+myresult2.getInt(4));
        printwriter.println("Product Name : "+myresult2.getString(5));
        printwriter.println("Quantity : "+myresult2.getInt(6));
        printwriter.println("Total Price : "+myresult2.getInt(7));
        printwriter.println("Date : "+myresult2.getString(8));
        printwriter.println("----------------------");  
        }
        printwriter.close(); 
            }
            else{
              JOptionPane.showMessageDialog(this,"Sorry ...Out of Stock !");  
            }
            
        } 
        stm.close();
        connect.close();
        }
        catch(Exception er){
            System.out.println(er);
        }
            
        }
        
    }//GEN-LAST:event_order_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_button;
    private javax.swing.JLabel empty_error_message;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton order_button;
    private javax.swing.JTextField product_name_textfield;
    private javax.swing.JTable products_table;
    private javax.swing.JTextField productsid_textfield;
    private javax.swing.JSpinner quantity_spinner;
    private javax.swing.JButton show_button;
    private javax.swing.JTextField total_price_textfield;
    private javax.swing.JTextField user_id_textfield;
    private javax.swing.JTextField user_name_textfield;
    // End of variables declaration//GEN-END:variables
}
